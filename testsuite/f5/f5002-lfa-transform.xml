<Test>
	<Flags>--emit-ir-post=genlower</Flags>

	<TestFlags>
		<TestFlag name="regex" value="false"></TestFlag>
	</TestFlags>

	<ExpectedOutput>
MyType = struct { i32, i32 }

function via_array_acces(%0:ptr): i32 {
.0:
	stack_alloc [ptr x 1], %1:ptr
	store %0:ptr, %1:ptr
	load %1:ptr, %2:ptr
	ptrtoint [ptr -> i32], %2:ptr, %3:i32
	imul 1:i32, 8:i32, %4:i32
	iadd %3:i32, %4:i32, %5:i32
	inttoptr [i32 -> ptr], %5:i32, %6:ptr
	ptrtoint [ptr -> i32], %6:ptr, %7:i32
	iadd %7:i32, 0:i32, %8:i32
	inttoptr [i32 -> ptr], %8:i32, %9:ptr
	load %9:ptr, %10:i32
	ret %10:i32
}
function via_direct_ptr_access(%0:ptr): i32 {
.0:
	stack_alloc [ptr x 1], %1:ptr
	store %0:ptr, %1:ptr
	load %1:ptr, %2:ptr
	ptrtoint [ptr -> i32], %2:ptr, %3:i32
	iadd %3:i32, 4:i32, %4:i32
	inttoptr [i32 -> ptr], %4:i32, %5:ptr
	load %5:ptr, %6:i32
	ret %6:i32
}
function via_value_access(): i32 {
.0:
	stack_alloc [MyType x 1], %0:ptr
	ptrtoint [ptr -> i32], %0:ptr, %1:i32
	iadd %1:i32, 0:i32, %2:i32
	inttoptr [i32 -> ptr], %2:i32, %3:ptr
	store 20:i32, %3:ptr
	ptrtoint [ptr -> i32], %0:ptr, %4:i32
	iadd %4:i32, 0:i32, %5:i32
	inttoptr [i32 -> ptr], %5:i32, %6:ptr
	load %6:ptr, %7:i32
	ret %7:i32
}
	</ExpectedOutput>
</Test>