Not a bug (tm) since this is technically UB (hehehehe, compiler get out)
but we evaluate arguments left to right, and clang/gcc seem to do it right -> left
e.g.



int my_global = 0;

int
set_global(int value)
{
	my_global = value;
	return value;
}

void
evaluate_parameters(int a, int b)
{ }

int
main()
{
	evaluate_parameters(
	  set_global(34),
	  set_global(66)
	);

	return my_global;
}


PS C:\helix> .\tools\hxc.bat f.c ; wsl ./tools/run-arm.sh ./a.out
Process exited with exit code 66

PS C:\helix> gcc f.c -o ga.exe; ./ga.exe ; echo $LASTEXITCODE
34

PS C:\helix> clang f.c -o ca.exe ; ./ca.exe ; echo $LASTEXITCODE
34