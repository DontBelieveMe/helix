int a = 10;
int* b = &a;
*b = 20;

stack_alloc [i32 x 1], %0 # a i32*
stack_alloc [ptr x 1], %1 # b i32**

store 10:i32, %0:ptr
store %0:ptr, %1:ptr

load %1:ptr, %2:ptr
store 20:i32, %2


///////////////////////////////////

int a = 10;
int* b = &a;
int** c = &b;

**c = 20;

stack_alloc [i32 x 1], %0 # i32*   a;
stack_alloc [ptr x 1], %1 # i32**  b;
stack_alloc [ptr x 1], %2 # i32*** c;

store 10:i32, %0:ptr      # *a = 10;
store %0:ptr, %1:ptr      # *b = a;
store %1:ptr, %2:ptr      # *c = b;

load %2:ptr, %3:ptr       # i32** t0 = *c;  // *c = b
load %3:ptr, %4:ptr       # i32*  t1 = *t0; // *t0 = a

store 20:i32, %4:ptr      # *t1 = 20;

////////////////////////////////////


ADDRESS OF:

	- Address of stack var is given with stack_alloc
	- Store that value in the space allocated for the pointer

DEREFERENCE:

	- Load the value stored in the pointers stack var
	- That value will be the actual pointer to the original stack var





